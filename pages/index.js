import Head from 'next/head';

import { useEffect, useState } from 'react';

import styles from '../styles/simple.module.css';

import {
  DragDropContext,
  Draggable,
  DropResult,
  Droppable,
} from 'react-beautiful-dnd';

export default function Home() {
  const defaultList = ['A', 'B', 'C', 'D', 'E'];
  const blankList = [];
  // React state to track order of items
  const [itemList, setItemList] = useState(defaultList);
  const [blankItemList, setBlankList] = useState(blankList);

  // Function to update list on drop
  const handleDrop = (droppedItem) => {
    console.log(droppedItem);
    // Ignore drop outside droppable container
    if (!droppedItem.destination) return;
    var updatedList = [...itemList];
    // Remove dragged item
    const [reorderedItem] = updatedList.splice(droppedItem.source.index, 1);
    // Add dropped item
    updatedList.splice(droppedItem.destination.index, 0, reorderedItem);
    // Update State
    setItemList(updatedList);
  };
  return (
    <div>
      <Head>
        <title>Drag-Drop-Animated-Todo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>HI mom</h1>

      <div className={styles.App}>
        <DragDropContext onDragEnd={handleDrop}>
          <Droppable droppableId={styles.list_container}>
            {(provided) => (
              <div
                className={styles.list_container}
                {...provided.droppableProps}
                ref={provided.innerRef}
              >
                {itemList.map((item, index) => (
                  <Draggable key={item} draggableId={item} index={index}>
                    {(provided) => (
                      <div
                        className={styles.item_container}
                        ref={provided.innerRef}
                        {...provided.dragHandleProps}
                        {...provided.draggableProps}
                      >
                        {item}
                      </div>
                    )}
                  </Draggable>
                ))}
                {provided.placeholder}
                {console.log('itemList : %s', itemList)}
              </div>
            )}
          </Droppable>
          {/*
          <Droppable droppableId={styles.list_container}>
            {(provided) => (
              <div
                className={styles.list_container}
                {...provided.droppableProps}
                ref={provided.innerRef}
              >
                {blankItemList.map((item, index) => (
                  <Draggable key={item} draggableId={item} index={index}>
                    {(provided) => (
                      <div
                        className={styles.item_container}
                        ref={provided.innerRef}
                        {...provided.dragHandleProps}
                        {...provided.draggableProps}
                      >
                        {}
                      </div>
                    )}
                  </Draggable>
                ))}
                {provided.placeholder}
              </div>
            )}
          </Droppable>
                    */}
        </DragDropContext>
      </div>
    </div>
  );
}
